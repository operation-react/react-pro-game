import { useState } from "react";
import Card from "../components/blocks/Card";
import ImageCarousel from "../components/blocks/ImageCarousel";
import Button from "../components/form/Button";
import Input from "../components/form/Input";
import Header from '../components/Header';
import { makeValidator, validate, Validators } from "../lib/validation";

const carouselImages = [{
    src: "/img/intro-1.png",
    size: 400
}, {
    src: "/img/intro-2.png",
    size: 178
}, {
    src: "/img/intro-3.png",
    size: 160
}, {
    src: "/img/intro-4.png",
    size: 143
}, {
    src: "/img/intro-5.png",
    size: 125
}, {
    src: "/img/intro-6.png",
    size: 107
}, {
    src: "/img/intro-7.png",
    size: 89
}];

const START_ANGLE = (85 / 52) * Math.PI;
const FORM_VALIDATION_RULES = {
    username: makeValidator(Validators.notEmpty, "Username should not be empty"),
    email: makeValidator(Validators.email, "Incorrect email"),
    password: makeValidator(Validators.notEmpty, "Password should not be empty")
};

export default function Home() {
    const [ formErrors, setFormErrors ] = useState({});
    const handleSubmit = async (event) => {
        event.preventDefault();

        const { target: form } = event;
        const formData = new FormData(form);
        const validationResult = validate(formData, FORM_VALIDATION_RULES);

        if (validationResult !== true) {
            setFormErrors(validationResult);
            return;
        }

        const response = await fetch(form.action, {
            method: form.method,
            body: JSON.stringify(Object.fromEntries(formData)),
            headers: {
                "Content-Type": "application/json"
            }
        });
        const json = await response.json();

        console.log(json);
    };
    const handleChange = (event) => {
        const { target } = event;

        if (target.name in formErrors) {
            const validationResult = FORM_VALIDATION_RULES[target.name](target.value);

            if (validationResult === true) {
                const newFormErrors = { ...formErrors };
                delete newFormErrors[target.name];
                setFormErrors(newFormErrors);
            }
        }
    };

    return (
        <div className="flex dir-column h-100">
            <Header />
            <div className="h-100 flex align-around valign-center container">
                <div className="bp-block-large">
                    <ImageCarousel startAngle={START_ANGLE} images={carouselImages} />
                    <p className="under-text fs-h1 mt-15">
                        <span className="under-text__border">What the </span>
                        <span className="under-text__accent mr-1">hell</span>
                        <span> is this?!</span>
                    </p>
                </div>
                <div className="flex dir-column valign-center">
                    <div className="mb-10">
                        <p className="fs-h3 pb-3">Images generated by AI</p>
                        <div className="hr"></div>
                        <p className="under-text fs-h3">
                            <span>Try to recognize what is shown </span>
                            <span className="under-text__accent pv-3 ml-1">on picture</span>
                        </p>
                    </div>
                    <Card className="mt-15">
                        <form action="/api/register" method="POST" onSubmit={ handleSubmit } onChange={ handleChange }>
                            <Input className="mb-2"
                                placeholder="Your username"
                                name="username"
                                error={ formErrors.username } />
                            <Input className="mb-2"
                                placeholder="Your email"
                                name="email"
                                error={ formErrors.email } />
                            <Input className="mb-6"
                                placeholder="Your password"
                                name="password"
                                type="password"
                                error={ formErrors.password } />
                            <Button type="submit" text="Join us" />
                        </form>
                    </Card>
                </div>
            </div>
        </div>
    );
}
